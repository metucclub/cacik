# Generated by Django 2.1.13 on 2019-10-14 21:08

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import jsonfield.fields


class Migration(migrations.Migration):

    dependencies = [
        ('preferences', '0002_auto_20181220_0803'),
        ('judge', '0001_squashed_0093_auto_20191014_1452'),
    ]

    operations = [
        migrations.CreateModel(
            name='SitePreferences',
            fields=[
                ('preferences_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='preferences.Preferences')),
                ('site_name', models.CharField(blank=True, max_length=100, null=True)),
                ('site_admin_email', models.CharField(blank=True, max_length=100, null=True)),
                ('site_logo', models.ImageField(blank=True, null=True, upload_to='')),
                ('enable_fts', models.BooleanField(default=False)),
                ('enable_rss', models.BooleanField(default=False)),
                ('no_comments', models.BooleanField(default=False)),
                ('enable_filters', models.BooleanField(default=False)),
                ('hide_best_solutions', models.BooleanField(default=False)),
            ],
            bases=('preferences.preferences',),
            managers=[
                ('singleton', django.db.models.manager.Manager()),
            ],
        ),
        migrations.AddField(
            model_name='contest',
            name='freeze_scoreboard_after',
            field=models.DateTimeField(blank=True, help_text='Freeze scoreboard after this time.', null=True, verbose_name='freeze scoreboard after'),
        ),
        migrations.AddField(
            model_name='contest',
            name='hide_participation_tab',
            field=models.BooleanField(default=False, help_text='Hide participation tab on contest page', verbose_name='hide participation tab'),
        ),
        migrations.AddField(
            model_name='contest',
            name='hide_points',
            field=models.BooleanField(default=False, help_text='Hide points on all pages', verbose_name='hide points'),
        ),
        migrations.AddField(
            model_name='contest',
            name='no_social_share',
            field=models.BooleanField(default=False, help_text='Disable social share buttons on contest page', verbose_name='disable social share buttons'),
        ),
        migrations.AddField(
            model_name='contestparticipation',
            name='frozen_cumtime',
            field=models.PositiveIntegerField(default=0, verbose_name='frozen cumulative time'),
        ),
        migrations.AddField(
            model_name='contestparticipation',
            name='frozen_format_data',
            field=jsonfield.fields.JSONField(blank=True, null=True, verbose_name='contest format specific data'),
        ),
        migrations.AddField(
            model_name='contestparticipation',
            name='frozen_score',
            field=models.IntegerField(db_index=True, default=0, verbose_name='frozen score'),
        ),
        migrations.AddField(
            model_name='contestproblem',
            name='letter',
            field=models.CharField(blank=True, max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='contest',
            name='format_name',
            field=models.CharField(choices=[('default', 'default')], default='default', help_text='The contest format module to use.', max_length=32, verbose_name='contest format'),
        ),
        migrations.AlterField(
            model_name='contest',
            name='use_clarifications',
            field=models.BooleanField(default=True, help_text='Use clarification system instead of comments.', verbose_name='use clarification system'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='group',
            field=models.ForeignKey(blank=True, help_text='The group of problem, shown under Category in the problem list.', null=True, on_delete=django.db.models.deletion.CASCADE, to='judge.ProblemGroup', verbose_name='problem group'),
        ),
        migrations.AlterField(
            model_name='problem',
            name='types',
            field=models.ManyToManyField(blank=True, help_text="The type of problem, as shown on the problem's page.", to='judge.ProblemType', verbose_name='problem types'),
        ),
        migrations.AddField(
            model_name='sitepreferences',
            name='active_contest',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='judge.Contest'),
        ),
    ]
